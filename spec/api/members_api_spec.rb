=begin
#Permit.io API

# Authorization as a service 

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MembersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MembersApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MembersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MembersApi' do
    it 'should create an instance of MembersApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MembersApi)
    end
  end

  # unit tests for delete_organization_member
  # Delete Organization Member
  # Deletes an account member matching the given id or email address. The member will be removed from the active account in permit.io.  If the member is the only member in its account (organization), returns 400 (bad request), due to nobody remains with access to the account, meaning deletion of the entire account (org). To completely remove an account, call DELETE &#x60;/orgs/{org}&#x60;.
  # @param member_id Either the unique id (UUID) of the account member, or the email address of the account member.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_organization_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_authenticated_member
  # Get the authenticated account member
  # Gets the authenticated account member&#39;s details.
  # @param [Hash] opts the optional parameters
  # @return [OrgMemberRead]
  describe 'get_authenticated_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organization_member
  # Get Organization Member
  # Gets a single account member by its id or email address. matching the given member, if no such member exists under the current active account (organization), returns 404.
  # @param member_id Either the unique id (UUID) of the account member, or the email address of the account member.
  # @param [Hash] opts the optional parameters
  # @return [OrgMemberRead]
  describe 'get_organization_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_organization_members
  # List Organization Members
  # Lists all the account members that have access to the current active account. The active account/organization is determined by the API Key used or by the authenticated session id.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number of the results to fetch, starting at 1.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @return [Array<OrgMemberRead>]
  describe 'list_organization_members test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_organization_member
  # Update Organization Member
  # Updates an account member&#39;s settings.
  # @param member_id Either the unique id (UUID) of the account member, or the email address of the account member.
  # @param org_member_update 
  # @param [Hash] opts the optional parameters
  # @return [OrgMemberRead]
  describe 'update_organization_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
