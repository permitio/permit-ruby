=begin
#Permit.io API

# Authorization as a service 

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::AuditLogsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AuditLogsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::AuditLogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuditLogsApi' do
    it 'should create an instance of AuditLogsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::AuditLogsApi)
    end
  end

  # unit tests for get_detailed_audit_log
  # Get detailed audit log
  # @param proj_id Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
  # @param env_id Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
  # @param log_id The unique id of the audit log
  # @param [Hash] opts the optional parameters
  # @return [DetailedAuditLog]
  describe 'get_detailed_audit_log test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_audit_logs
  # List Audit Logs
  # @param proj_id Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
  # @param env_id Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pdp_id Filter by pdp config id
  # @option opts [Array<String>] :users List of user keys or emails to filter by
  # @option opts [Boolean] :decision Filter by decision result
  # @option opts [Array<String>] :resources Filter by resources
  # @option opts [String] :tenant Filter by tenant
  # @option opts [String] :action Filter by action
  # @option opts [Integer] :timestamp_from Filter by timestamp from
  # @option opts [Integer] :timestamp_to Filter by timestamp to
  # @option opts [Integer] :page Page number of the results to fetch, starting at 1.
  # @option opts [Integer] :per_page The number of results per page (max 100).
  # @return [PaginatedResultAuditLog]
  describe 'list_audit_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
